name: 프론트 프로덕션 CI/CD

on:
  workflow_dispatch:

jobs:
  build:
    name: dev-deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        node-version: [16.x]
    env:
      WORKING_DIR: ./fe
      DEPLOY_TYPE: fe
      S3_BUCKET_NAME: airbnb-deploy
      PROJECT_NAME: airbnb
      AWS_REGION: ap-northeast-2
      CODE_DEPLOY_APPLICATION_NAME: codesquad-deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Docker Environmet Variable file
        run:
          echo -e "REACT_APP_MAP_API_KEY=${{secrets.REACT_APP_MAP_API_KEY}}\nREACT_APP_SERVER_URL=${{secrets.REACT_APP_SERVER_URL}}" > ./.env
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run "npm ci"
        run: npm ci
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run "npm run build --if-present"
        run: CI=false npm run build
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: bugpigg
          password: ${{ secrets.CR_PAT }}

      - name: Docker Image Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{env.WORKING_DIR}}
          file: ${{env.WORKING_DIR}}/Dockerfile
          push: true
          tags: ghcr.io/bugpigg/airbnb-${{ env.DEPLOY_TYPE }}:latest
          build-args: REACT_APP_MAP_API_KEY=${{secrets.REACT_APP_MAP_API_KEY}},REACT_APP_SERVER_URL=${{secrets.REACT_APP_SERVER_URL}}

      # $GITHUB_SHA는 현재 workflow를 실행시키는 커밋의 해쉬값
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip ./scripts ./appspec.yml ./.env
        shell: bash
        working-directory: ${{env.WORKING_DIR}}

      # 저장소에 미리 저장해놓은 엑세스 키 ID, 비밀 엑세스 키, 지역 정보
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region $AWS_REGION ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$DEPLOY_TYPE/$GITHUB_SHA.zip
        working-directory: ${{env.WORKING_DIR}}

      # CodeDeply 관련 설정
      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APPLICATION_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name develop --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$DEPLOY_TYPE/$GITHUB_SHA.zip
        working-directory: ${{env.WORKING_DIR}}
